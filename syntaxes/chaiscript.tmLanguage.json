{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ChaiScript",
	"patterns": [{
		"include": "#statements"
	}],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control",
				"match": "\\b(try|catch|finally|if|else|while|for|case|default|switch|return|break|continue|auto|var|global|this)\\b"
			}]
		},
		"statements": {
			"patterns": [{
				"include": "#strings"
			}, {
				"include": "#comments"
			}, {
				"include": "#keywords"
			}, {
				"include": "#constant"
			}, {
				"include": "#block"
			}, {
				"include": "#declaration"
			}, {
				"include": "#brace"
			}, {
				"include": "#function_call"
			}, {
				"include": "#numbers"
			}]
		},
		"numbers": {
			"patterns": [{
				"match": "\\b((0(x|X)[0-9a-fA-F]([0-9a-fA-F']*[0-9a-fA-F])?)|(0(b|B)[01]([01']*[01])?)|(([0-9]([0-9']*[0-9])?\\.?[0-9]*([0-9']*[0-9])?)|(\\.[0-9]([0-9']*[0-9])?))((e|E)(\\+|-)?[0-9]([0-9']*[0-9])?)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b",
				"name": "constant.numeric.c"
			}]
		},
		"function_call": {
			"name": "meta.call",
			"begin": "(\\w+)(?=\\()",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function"
				}
			},
			"end": "(?<=\\))",
			"patterns": [{
				"include": "#statements"
			}]
		},
		"constant": {
			"patterns": [{
				"name": "constant.language",
				"match": "\\b(true|false)\\b"
			}]
		},
		"declaration": {
			"patterns": [{
				"include": "#class-declaration"
			}, {
				"include": "#function-declaration"
			}, {
				"include": "#lambda-declaration"
			}, {
				"include": "#attr-declaration"
			}]
		},
		"attr-declaration": {
			"name": "meta.attr",
			"begin": "\\b(attr)\\b\\s*(\\w*)::(\\w*)\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.langauge"
				},
				"2": {
					"name": "entity.name.class.chaiscript"
				},
				"3": {
					"name": "entity.name.function.chaiscript"
				}
			},
			"end": "\\b",
			"patterns": []
		},
		"direct-attr-declaration": {
			"name": "meta.attr",
			"begin": "\\b(attr)\\b\\s*(\\w*)\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.language"
				},
				"3": {
					"name": "entity.name.function.chaiscript"
				}
			},
			"end": "\\b",
			"patterns": []
		},
		"class-declaration": {
			"name": "meta.class",
			"begin": "\\b(class)\\b\\s*(\\w*)\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.language"
				},
				"2": {
					"name": "entity.name.class.chaiscript"
				}
			},
			"end": "(?<=\\})",
			"patterns": [{
				"include": "#class-block"
			}]
		},
		"lambda-declaration": {
			"name": "meta.function",
			"begin": "\\b(fun\\b)\\s*(\\[.*?\\])?\\(.*?\\)\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.language"
				}
			},
			"end": "(?<=\\})",
			"patterns": [{
				"include": "#block"
			}]
		},
		"function-declaration": {
			"name": "meta.proc",
			"patterns": [{
				"begin": "\\b(def\\b)\\s*(\\w*)\\s*\\([^\\)]*?\\)(\\:.*?)?\\s*(?=\\n|{)",
				"captures": {
					"1": {
						"name": "keyword.language"
					},
					"2": {
						"name": "entity.name.function.chaiscript"
					}
				},
				"end": "(?<=\\})",
				"patterns": [{
					"include": "#block"
				}]
			}]
		},
		"strings": {
			"name": "string.quoted.double",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape",
				"match": "\\\\."
			}]
		},
		"comments": {
			"name": "comment",
			"patterns": [{
				"begin": "(^[ \\t]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
				"beginCaptures": {
					"1": {
						"name": "punctuation.whitespace.comment.leading"
					},
					"2": {
						"name": "comment.line.double-slash"
					},
					"3": {
						"name": "punctuation.definition.comment"
					},
					"4": {
						"name": "storage.type.internaldeclaration"
					},
					"5": {
						"name": "punctuation.decorator.internaldeclaration"
					}
				},
				"end": "(?=^)",
				"contentName": "comment.line.double-slash"
			}, {
				"name": "comment.block",
				"begin": "/\\*",
				"end": "\\*/"
			}]
		},
		"block": {
			"name": "meta.block",
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.section.parens.begin.bracket.round"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.parens.end.bracket.round"
				}
			},
			"patterns": [{
				"include": "#statements"
			}]
		},
		"class-block": {
			"name": "meta.block",
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.section.parens.begin.bracket.round"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.parens.end.bracket.round"
				}
			},
			"patterns": [{
				"include": "#statements"
			}, {
				"include": "#direct-attr-declaration"
			}]
		}
	},
	"scopeName": "source.chai"
}